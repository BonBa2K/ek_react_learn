2.2 開發環境：
npx create-react-app my-app
这会临时下载并运行 create-react-app 包，然后创建一个新的 React 应用。

2.3 工程目錄：
npm start 開始 run
npm start 指令在 package 裡

第 6 行
import Enum from './Enum';
第 27 行
root.render(
<React.StrictMode>
<Ani />
<Enum />
</React.StrictMode>
);
指定渲染

2.4 component：
class 元件要用 render( return )
function 元件則直接 return 即可
在函数组件中，渲染逻辑就是函数的返回值。
React 会在函数组件每次渲染时调用这个函数，并使用其返回的 JSX 来更新 DOM

2.5 JSX

1.  需使用 Fragment or div
    const element = (
    <>
    <h1>Title</h1>
    <p>Paragraph</p>
    </>
    );

2.  像 HTML 一样，自闭合的标签必须以 / 结尾：
    const element = <img src="logo.png" alt="Logo" />;

3.  可以在{}中使用任意的 JavaScript 表达式，
    但不能使用语句（如 if 或 for）。通常使用三元运算符来处理条件渲染：
    const isLoggedIn = true;
    const element = <div>{isLoggedIn ? 'Welcome back!' : 'Please sign in.'}</div>;

4.  可以像在 HTML 中一样为 JSX 元素添加属性
    const divElement = <div className="container"></div>;

5.  可以使用 map 方法来渲染列表(第 62 行)
    const items = ['Apple', 'Banana', 'Cherry'];
    const listItems = items.map((item) => <li key={item}>{item}</li>);
    const element = <ul>{listItems}</ul>;

6.  React 通过组件名称的首字母来区分 HTML 元素和自定义组件
    小寫：原生
    大寫：自定義

3.1 ~ 3.4 Enum CURD
詳見 Enum.js

3.5 组件与组件之间的传值
詳見 Enum_item.js

3.6 類组件優化

3.7 React 設計
與其他框架不衝突
限定單向資料流，父=>子，調用父組件的含是可以更好的維護(狀態更新都在一處)
React 為視圖層框架，資料流的問題交給其他框架。
函式型編程

4.1 React 設計
chrome 有擴充功能：react-devtools

4.2 PropTypes 与 DefaultProps
詳見 Enum_item.js propTypes

4.3 props，state 与 render 函数
當組件的 prop 或 state 改變時，會調用一次 render
預設父組件重新渲染時，子組件會重渲染一次
詳見 Enum.js render

4.4 ~ 4.6 React 中的虚拟 DOM
比較有效率
真實 DOM 的操作減免，處理多半是以 js 的 object 進行比較、修改，最後才改真實 DOM
預設父組件重新渲染時，子組件會重渲染一次
詳見 Virtual_DOM.txt

4.7 ref 函数
對 DOM 的操作
詳見 Enum.js

4.8 ~ 4.10 生命週期函數
Enum.js ajax part 與 Enum_item.js memo
詳見 lifeCycle.txt

4.11 ~ 4.14 React-Transition-Group
詳見 Ani.js Ani.css Animation.txt

5.1 Redux = Reducer + Flux
    數據層級
    搞一個 Store 存資料給各節點用

5.2 Redux工作流程
https://youtu.be/-aHvIoMxASk?si=TQJkLTMeRhbCCHsb
                     (圖書館員)   (借書紀錄本)
                    =>  Store  <=>  Reducers
                   =     | |
    Action Creater       | |
    (下order)      <=     V
                    =>  React Components
                        (借書者)